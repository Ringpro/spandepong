// GENERATED by @gel/generate v0.6.3

import * as $ from "../reflection";
import * as _ from "../imports";
import type * as _std from "./std";
export type $GameMatchλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "created_at": $.PropertyDesc<_std.$datetime, $.Cardinality.AtMostOne, false, false, false, true>;
  "finished_at": $.PropertyDesc<_std.$datetime, $.Cardinality.AtMostOne, false, false, false, false>;
  "started_at": $.PropertyDesc<_std.$datetime, $.Cardinality.AtMostOne, false, false, false, false>;
  "status": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, true>;
  "team1_score": $.PropertyDesc<_std.$int16, $.Cardinality.AtMostOne, false, false, false, true>;
  "team2_score": $.PropertyDesc<_std.$int16, $.Cardinality.AtMostOne, false, false, false, true>;
  "round": $.LinkDesc<$Round, $.Cardinality.One, {}, false, false,  false, false>;
  "team1": $.LinkDesc<$Team, $.Cardinality.One, {}, false, false,  false, false>;
  "team2": $.LinkDesc<$Team, $.Cardinality.One, {}, false, false,  false, false>;
  "tournament": $.LinkDesc<$Tournament, $.Cardinality.One, {}, false, false,  false, false>;
  "winner": $.LinkDesc<$Team, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "<game_match[is TeamMembership]": $.LinkDesc<$TeamMembership, $.Cardinality.Many, {}, false, false,  false, false>;
  "<game_match": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $GameMatch = $.ObjectType<"default::GameMatch", $GameMatchλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
  {tournament: {__element__: $Tournament, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },round: {__element__: $Round, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },team1: {__element__: $Team, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },team2: {__element__: $Team, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
], "default::GameMatch">;
const $GameMatch = $.makeType<$GameMatch>(_.spec, "91fe2a19-3d4d-11f0-a32f-3b8e8d7a7a6a", _.syntax.literal);

const GameMatch: $.$expr_PathNode<$.TypeSet<$GameMatch, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($GameMatch, $.Cardinality.Many), null);

export type $PlayerλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "created_at": $.PropertyDesc<_std.$datetime, $.Cardinality.AtMostOne, false, false, false, true>;
  "email": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "name": $.PropertyDesc<_std.$str, $.Cardinality.One, true, false, false, false>;
  "<members[is Team]": $.LinkDesc<$Team, $.Cardinality.Many, {}, false, false,  false, false>;
  "<player[is TournamentRegistration]": $.LinkDesc<$TournamentRegistration, $.Cardinality.Many, {}, false, false,  false, false>;
  "<player[is TeamMembership]": $.LinkDesc<$TeamMembership, $.Cardinality.Many, {}, false, false,  false, false>;
  "<members": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<player": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Player = $.ObjectType<"default::Player", $PlayerλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
  {name: {__element__: _std.$str, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
], "default::Player">;
const $Player = $.makeType<$Player>(_.spec, "62446d5b-3d4d-11f0-990e-cff5a55022f5", _.syntax.literal);

const Player: $.$expr_PathNode<$.TypeSet<$Player, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Player, $.Cardinality.Many), null);

export type $RoundλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "round_number": $.PropertyDesc<_std.$int16, $.Cardinality.One, false, false, false, false>;
  "created_at": $.PropertyDesc<_std.$datetime, $.Cardinality.AtMostOne, false, false, false, true>;
  "status": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, true>;
  "tournament": $.LinkDesc<$Tournament, $.Cardinality.One, {}, false, false,  false, false>;
  "<round[is GameMatch]": $.LinkDesc<$GameMatch, $.Cardinality.Many, {}, false, false,  false, false>;
  "<round": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Round = $.ObjectType<"default::Round", $RoundλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
  {tournament: {__element__: $Tournament, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },round_number: {__element__: _std.$int16, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
], "default::Round">;
const $Round = $.makeType<$Round>(_.spec, "91f98830-3d4d-11f0-881b-19c5481f075f", _.syntax.literal);

const Round: $.$expr_PathNode<$.TypeSet<$Round, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Round, $.Cardinality.Many), null);

export type $TeamλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "created_at": $.PropertyDesc<_std.$datetime, $.Cardinality.AtMostOne, false, false, false, true>;
  "name": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "members": $.LinkDesc<$Player, $.Cardinality.Many, {}, false, false,  false, false>;
  "<team1[is GameMatch]": $.LinkDesc<$GameMatch, $.Cardinality.Many, {}, false, false,  false, false>;
  "<team2[is GameMatch]": $.LinkDesc<$GameMatch, $.Cardinality.Many, {}, false, false,  false, false>;
  "<winner[is GameMatch]": $.LinkDesc<$GameMatch, $.Cardinality.Many, {}, false, false,  false, false>;
  "<team[is TeamMembership]": $.LinkDesc<$TeamMembership, $.Cardinality.Many, {}, false, false,  false, false>;
  "<team": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<team1": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<team2": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<winner": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Team = $.ObjectType<"default::Team", $TeamλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
], "default::Team">;
const $Team = $.makeType<$Team>(_.spec, "91fc8bcf-3d4d-11f0-b6c0-c5112a1c4c3c", _.syntax.literal);

const Team: $.$expr_PathNode<$.TypeSet<$Team, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Team, $.Cardinality.Many), null);

export type $TeamMembershipλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "created_at": $.PropertyDesc<_std.$datetime, $.Cardinality.AtMostOne, false, false, false, true>;
  "game_match": $.LinkDesc<$GameMatch, $.Cardinality.One, {}, false, false,  false, false>;
  "player": $.LinkDesc<$Player, $.Cardinality.One, {}, false, false,  false, false>;
  "team": $.LinkDesc<$Team, $.Cardinality.One, {}, false, false,  false, false>;
}>;
type $TeamMembership = $.ObjectType<"default::TeamMembership", $TeamMembershipλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
  {player: {__element__: $Player, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },game_match: {__element__: $GameMatch, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
], "default::TeamMembership">;
const $TeamMembership = $.makeType<$TeamMembership>(_.spec, "92029a84-3d4d-11f0-adf2-cf23188d0210", _.syntax.literal);

const TeamMembership: $.$expr_PathNode<$.TypeSet<$TeamMembership, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($TeamMembership, $.Cardinality.Many), null);

export type $TournamentλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "created_at": $.PropertyDesc<_std.$datetime, $.Cardinality.AtMostOne, false, false, false, true>;
  "description": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "max_players": $.PropertyDesc<_std.$int16, $.Cardinality.AtMostOne, false, false, false, true>;
  "name": $.PropertyDesc<_std.$str, $.Cardinality.One, false, false, false, false>;
  "status": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, true>;
  "<tournament[is TournamentRegistration]": $.LinkDesc<$TournamentRegistration, $.Cardinality.Many, {}, false, false,  false, false>;
  "<tournament[is Round]": $.LinkDesc<$Round, $.Cardinality.Many, {}, false, false,  false, false>;
  "<tournament[is GameMatch]": $.LinkDesc<$GameMatch, $.Cardinality.Many, {}, false, false,  false, false>;
  "<tournament": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Tournament = $.ObjectType<"default::Tournament", $TournamentλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
], "default::Tournament">;
const $Tournament = $.makeType<$Tournament>(_.spec, "6246405a-3d4d-11f0-a96e-055bcd852802", _.syntax.literal);

const Tournament: $.$expr_PathNode<$.TypeSet<$Tournament, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Tournament, $.Cardinality.Many), null);

export type $TournamentRegistrationλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "registered_at": $.PropertyDesc<_std.$datetime, $.Cardinality.AtMostOne, false, false, false, true>;
  "player": $.LinkDesc<$Player, $.Cardinality.One, {}, false, false,  false, false>;
  "tournament": $.LinkDesc<$Tournament, $.Cardinality.One, {}, false, false,  false, false>;
}>;
type $TournamentRegistration = $.ObjectType<"default::TournamentRegistration", $TournamentRegistrationλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
  {player: {__element__: $Player, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },tournament: {__element__: $Tournament, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
], "default::TournamentRegistration">;
const $TournamentRegistration = $.makeType<$TournamentRegistration>(_.spec, "62486e87-3d4d-11f0-82d3-8d8b8f86294a", _.syntax.literal);

const TournamentRegistration: $.$expr_PathNode<$.TypeSet<$TournamentRegistration, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($TournamentRegistration, $.Cardinality.Many), null);



export { $GameMatch, GameMatch, $Player, Player, $Round, Round, $Team, Team, $TeamMembership, TeamMembership, $Tournament, Tournament, $TournamentRegistration, TournamentRegistration };

type __defaultExports = {
  "GameMatch": typeof GameMatch;
  "Player": typeof Player;
  "Round": typeof Round;
  "Team": typeof Team;
  "TeamMembership": typeof TeamMembership;
  "Tournament": typeof Tournament;
  "TournamentRegistration": typeof TournamentRegistration
};
const __defaultExports: __defaultExports = {
  "GameMatch": GameMatch,
  "Player": Player,
  "Round": Round,
  "Team": Team,
  "TeamMembership": TeamMembership,
  "Tournament": Tournament,
  "TournamentRegistration": TournamentRegistration
};
export default __defaultExports;
